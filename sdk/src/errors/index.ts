/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

type ErrorWithCode = Error & { code: number }
type MaybeErrorWithCode = ErrorWithCode | null | undefined

const createErrorFromCodeLookup: Map<number, () => ErrorWithCode> = new Map()
const createErrorFromNameLookup: Map<string, () => ErrorWithCode> = new Map()

/**
 * UnexpectedWrapperToken: 'Unexpected wrapper token mint'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedWrapperTokenError extends Error {
  readonly code: number = 0x0
  readonly name: string = 'UnexpectedWrapperToken'
  constructor() {
    super('Unexpected wrapper token mint')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedWrapperTokenError)
    }
  }
}

createErrorFromCodeLookup.set(0x0, () => new UnexpectedWrapperTokenError())
createErrorFromNameLookup.set(
  'UnexpectedWrapperToken',
  () => new UnexpectedWrapperTokenError()
)

/**
 * UnexpectedTokenProgram: 'Unexpected SPL Token Program'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedTokenProgramError extends Error {
  readonly code: number = 0x1
  readonly name: string = 'UnexpectedTokenProgram'
  constructor() {
    super('Unexpected SPL Token Program')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedTokenProgramError)
    }
  }
}

createErrorFromCodeLookup.set(0x1, () => new UnexpectedTokenProgramError())
createErrorFromNameLookup.set(
  'UnexpectedTokenProgram',
  () => new UnexpectedTokenProgramError()
)

/**
 * UnexpectedToken2022Program: 'Unexpected Token 2022 Program'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedToken2022ProgramError extends Error {
  readonly code: number = 0x2
  readonly name: string = 'UnexpectedToken2022Program'
  constructor() {
    super('Unexpected Token 2022 Program')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedToken2022ProgramError)
    }
  }
}

createErrorFromCodeLookup.set(0x2, () => new UnexpectedToken2022ProgramError())
createErrorFromNameLookup.set(
  'UnexpectedToken2022Program',
  () => new UnexpectedToken2022ProgramError()
)

/**
 * UnexpectedSystemProgram: 'Unexpected System Program'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedSystemProgramError extends Error {
  readonly code: number = 0x3
  readonly name: string = 'UnexpectedSystemProgram'
  constructor() {
    super('Unexpected System Program')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedSystemProgramError)
    }
  }
}

createErrorFromCodeLookup.set(0x3, () => new UnexpectedSystemProgramError())
createErrorFromNameLookup.set(
  'UnexpectedSystemProgram',
  () => new UnexpectedSystemProgramError()
)

/**
 * UnexpectedRent: 'Unexpected Rent'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedRentError extends Error {
  readonly code: number = 0x4
  readonly name: string = 'UnexpectedRent'
  constructor() {
    super('Unexpected Rent')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedRentError)
    }
  }
}

createErrorFromCodeLookup.set(0x4, () => new UnexpectedRentError())
createErrorFromNameLookup.set('UnexpectedRent', () => new UnexpectedRentError())

/**
 * InvalidTokenAccount: 'Invalid token account'
 *
 * @category Errors
 * @category generated
 */
export class InvalidTokenAccountError extends Error {
  readonly code: number = 0x5
  readonly name: string = 'InvalidTokenAccount'
  constructor() {
    super('Invalid token account')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, InvalidTokenAccountError)
    }
  }
}

createErrorFromCodeLookup.set(0x5, () => new InvalidTokenAccountError())
createErrorFromNameLookup.set(
  'InvalidTokenAccount',
  () => new InvalidTokenAccountError()
)

/**
 * InvalidTokenMint: 'Invalid token mint'
 *
 * @category Errors
 * @category generated
 */
export class InvalidTokenMintError extends Error {
  readonly code: number = 0x6
  readonly name: string = 'InvalidTokenMint'
  constructor() {
    super('Invalid token mint')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, InvalidTokenMintError)
    }
  }
}

createErrorFromCodeLookup.set(0x6, () => new InvalidTokenMintError())
createErrorFromNameLookup.set(
  'InvalidTokenMint',
  () => new InvalidTokenMintError()
)

/**
 * UnexpectedReserveTokenAccount: 'Unexpected reserve token account'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedReserveTokenAccountError extends Error {
  readonly code: number = 0x7
  readonly name: string = 'UnexpectedReserveTokenAccount'
  constructor() {
    super('Unexpected reserve token account')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedReserveTokenAccountError)
    }
  }
}

createErrorFromCodeLookup.set(
  0x7,
  () => new UnexpectedReserveTokenAccountError()
)
createErrorFromNameLookup.set(
  'UnexpectedReserveTokenAccount',
  () => new UnexpectedReserveTokenAccountError()
)

/**
 * UnexpectedReserveAuthority: 'Unexpected reserve authority'
 *
 * @category Errors
 * @category generated
 */
export class UnexpectedReserveAuthorityError extends Error {
  readonly code: number = 0x8
  readonly name: string = 'UnexpectedReserveAuthority'
  constructor() {
    super('Unexpected reserve authority')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, UnexpectedReserveAuthorityError)
    }
  }
}

createErrorFromCodeLookup.set(0x8, () => new UnexpectedReserveAuthorityError())
createErrorFromNameLookup.set(
  'UnexpectedReserveAuthority',
  () => new UnexpectedReserveAuthorityError()
)

/**
 * ExpectedOwnerWrapperProgram: 'Expected account to be owned by wrapper program'
 *
 * @category Errors
 * @category generated
 */
export class ExpectedOwnerWrapperProgramError extends Error {
  readonly code: number = 0x9
  readonly name: string = 'ExpectedOwnerWrapperProgram'
  constructor() {
    super('Expected account to be owned by wrapper program')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, ExpectedOwnerWrapperProgramError)
    }
  }
}

createErrorFromCodeLookup.set(0x9, () => new ExpectedOwnerWrapperProgramError())
createErrorFromNameLookup.set(
  'ExpectedOwnerWrapperProgram',
  () => new ExpectedOwnerWrapperProgramError()
)

/**
 * MissingSigner: 'Missing signer'
 *
 * @category Errors
 * @category generated
 */
export class MissingSignerError extends Error {
  readonly code: number = 0xa
  readonly name: string = 'MissingSigner'
  constructor() {
    super('Missing signer')
    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(this, MissingSignerError)
    }
  }
}

createErrorFromCodeLookup.set(0xa, () => new MissingSignerError())
createErrorFromNameLookup.set('MissingSigner', () => new MissingSignerError())

/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
export function errorFromCode(code: number): MaybeErrorWithCode {
  const createError = createErrorFromCodeLookup.get(code)
  return createError != null ? createError() : null
}

/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
export function errorFromName(name: string): MaybeErrorWithCode {
  const createError = createErrorFromNameLookup.get(name)
  return createError != null ? createError() : null
}
