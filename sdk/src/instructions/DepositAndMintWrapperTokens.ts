/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category DepositAndMintWrapperTokens
 * @category generated
 */
export const DepositAndMintWrapperTokensStruct = new beet.BeetArgsStruct<{
  instructionDiscriminator: number
}>(
  [['instructionDiscriminator', beet.u8]],
  'DepositAndMintWrapperTokensInstructionArgs'
)

export const depositAndMintWrapperTokensInstructionDiscriminator = 1

/**
 * Creates a _DepositAndMintWrapperTokens_ instruction.
 *
 * @category Instructions
 * @category DepositAndMintWrapperTokens
 * @category generated
 */
export function createDepositAndMintWrapperTokensInstruction(
  programId = new web3.PublicKey('6E9iP7p4Gx2e6c2Yt4MHY5T1aZ8RWhrmF9p6bXkGWiza')
) {
  const [data] = DepositAndMintWrapperTokensStruct.serialize({
    instructionDiscriminator:
      depositAndMintWrapperTokensInstructionDiscriminator,
  })
  const keys: web3.AccountMeta[] = []

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}